// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TasksApp.DataAccess;

namespace TasksApp.DataAccess.Migrations
{
    [DbContext(typeof(TodoDBContext))]
    partial class TodoDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TasksApp.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddresNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Street")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddresNo = "45",
                            City = "Colombo 1",
                            FullName = "Dinuwan Kalubowila",
                            Street = "Street 1"
                        },
                        new
                        {
                            Id = 2,
                            AddresNo = "35",
                            City = "Colombo 2",
                            FullName = "Dureksha Wasala",
                            Street = "Street 2"
                        },
                        new
                        {
                            Id = 3,
                            AddresNo = "25",
                            City = "Colombo 3",
                            FullName = "Chod Perera",
                            Street = "Street 3"
                        },
                        new
                        {
                            Id = 4,
                            AddresNo = "15",
                            City = "Colombo 4",
                            FullName = "Chamika Visal",
                            Street = "Street 4"
                        });
                });

            modelBuilder.Entity("TasksApp.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Due")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Created = new DateTime(2021, 7, 28, 20, 1, 55, 196, DateTimeKind.Local).AddTicks(7786),
                            Description = "Get books for school from DB",
                            Due = new DateTime(2021, 8, 2, 20, 1, 55, 197, DateTimeKind.Local).AddTicks(9619),
                            Status = 0,
                            Title = "Get Books"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Created = new DateTime(2021, 7, 28, 20, 1, 55, 198, DateTimeKind.Local).AddTicks(1281),
                            Description = "Get Medicine for sickness",
                            Due = new DateTime(2021, 7, 30, 20, 1, 55, 198, DateTimeKind.Local).AddTicks(1288),
                            Status = 1,
                            Title = "Get Medicine"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            Created = new DateTime(2021, 7, 28, 20, 1, 55, 198, DateTimeKind.Local).AddTicks(1297),
                            Description = "Get Foods from Resrurant",
                            Due = new DateTime(2021, 7, 31, 20, 1, 55, 198, DateTimeKind.Local).AddTicks(1298),
                            Status = 1,
                            Title = "Get Foods"
                        });
                });

            modelBuilder.Entity("TasksApp.Models.Todo", b =>
                {
                    b.HasOne("TasksApp.Models.Author", "Author")
                        .WithMany("Todos")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("TasksApp.Models.Author", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
